{
  "address": "0xB732E596fD436f26B86Bb52bC353530Ed87fBaf5",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_tokenIn",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_tokenOut",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amountIn",
          "type": "uint256"
        }
      ],
      "name": "getAmountOutMin",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_tokenIn",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_tokenOut",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amountIn",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_amountOutMin",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        }
      ],
      "name": "swap",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x69d4cb90e0c8879657ed36571539f81bc66a808fdf56d9fc5437d3b1e4098250",
  "receipt": {
    "to": "0x0000000000000000000000000000000000000000",
    "from": "0x41DD8Ea1fc8d83f8c4a20a5a6E57238c7F476C09",
    "contractAddress": "0xB732E596fD436f26B86Bb52bC353530Ed87fBaf5",
    "transactionIndex": 0,
    "gasUsed": "595849",
    "logsBloom": "0x
    "blockHash": "0x328d00e6db51e44c0b5db158c4060d5140e237f60b047e926c6e183ef6b303ff",
    "transactionHash": "0x69d4cb90e0c8879657ed36571539f81bc66a808fdf56d9fc5437d3b1e4098250",
    "logs": [],
    "blockNumber": 2241412,
    "cumulativeGasUsed": "595849",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "ee2ab5cfb985649e459e68a971023389",
  "metadata": "{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amountIn\",\"type\":\"uint256\"}],\"name\":\"getAmountOutMin\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"swap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Greeter.sol\":\"Greeter\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"},\"contracts/Greeter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"./interface/Uniswap.sol\\\";\\n\\ncontract Greeter {\\n  address private constant UNISWAP_V2_ROUTER =\\n    0x7cC8CE65D5F3d7D417188fED0dBFE403FD956487;// Uniswap Router Contract address on fancy \\n  address private constant WETH = 0x76A3Ef01506eB19D6B34C4bDcF3cDcdE14F6B11E;// USDP BASE \\n\\n  function swap(\\n    address _tokenIn,\\n    address _tokenOut,\\n    uint _amountIn,\\n    uint _amountOutMin,\\n    address _to\\n  ) external {\\n    IERC20(_tokenIn).transferFrom(msg.sender, address(this), _amountIn);\\n    IERC20(_tokenIn).approve(UNISWAP_V2_ROUTER, _amountIn);\\n\\n    address[] memory path;\\n    if (_tokenIn == WETH || _tokenOut == WETH) {\\n      path = new address[](2);\\n      path[0] = _tokenIn;\\n      path[1] = _tokenOut;\\n    } else {\\n      path = new address[](3);\\n      path[0] = _tokenIn;\\n      path[1] = WETH;\\n      path[2] = _tokenOut;\\n    }\\n\\n    IUniswapV2Router(UNISWAP_V2_ROUTER).swapExactTokensForTokens(\\n      _amountIn,\\n      _amountOutMin,\\n      path,\\n      _to,\\n      block.timestamp\\n    );\\n  }\\n\\n  function getAmountOutMin(\\n    address _tokenIn,\\n    address _tokenOut,\\n    uint _amountIn\\n  ) external view returns (uint) {\\n    address[] memory path;\\n    if (_tokenIn == WETH || _tokenOut == WETH) {\\n      path = new address[](2);\\n      path[0] = _tokenIn;\\n      path[1] = _tokenOut;\\n    } else {\\n      path = new address[](3);\\n      path[0] = _tokenIn;\\n      path[1] = WETH;\\n      path[2] = _tokenOut;\\n    }\\n\\n    // same length as path\\n    uint[] memory amountOutMins =\\n      IUniswapV2Router(UNISWAP_V2_ROUTER).getAmountsOut(_amountIn, path);\\n\\n    return amountOutMins[path.length - 1];\\n  }\\n}\",\"keccak256\":\"0x4448e0de0ecd0ccd133fb1cf1cd5fd3dd176fb6ddde5a0e45e9aef7269376178\",\"license\":\"MIT\"},\"contracts/interface/Uniswap.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8;\\r\\n\\r\\n// https://uniswap.org/docs/v2/smart-contracts\\r\\n\\r\\ninterface IUniswapV2Router {\\r\\n  function getAmountsOut(uint amountIn, address[] memory path)\\r\\n    external\\r\\n    view\\r\\n    returns (uint[] memory amounts);\\r\\n\\r\\n  function swapExactTokensForTokens(\\r\\n    uint amountIn,\\r\\n    uint amountOutMin,\\r\\n    address[] calldata path,\\r\\n    address to,\\r\\n    uint deadline\\r\\n  ) external returns (uint[] memory amounts);\\r\\n\\r\\n  function swapExactTokensForETH(\\r\\n    uint amountIn,\\r\\n    uint amountOutMin,\\r\\n    address[] calldata path,\\r\\n    address to,\\r\\n    uint deadline\\r\\n  ) external returns (uint[] memory amounts);\\r\\n\\r\\n  function swapExactETHForTokens(\\r\\n    uint amountOutMin,\\r\\n    address[] calldata path,\\r\\n    address to,\\r\\n    uint deadline\\r\\n  ) external payable returns (uint[] memory amounts);\\r\\n\\r\\n  function addLiquidity(\\r\\n    address tokenA,\\r\\n    address tokenB,\\r\\n    uint amountADesired,\\r\\n    uint amountBDesired,\\r\\n    uint amountAMin,\\r\\n    uint amountBMin,\\r\\n    address to,\\r\\n    uint deadline\\r\\n  )\\r\\n    external\\r\\n    returns (\\r\\n      uint amountA,\\r\\n      uint amountB,\\r\\n      uint liquidity\\r\\n    );\\r\\n\\r\\n  function removeLiquidity(\\r\\n    address tokenA,\\r\\n    address tokenB,\\r\\n    uint liquidity,\\r\\n    uint amountAMin,\\r\\n    uint amountBMin,\\r\\n    address to,\\r\\n    uint deadline\\r\\n  ) external returns (uint amountA, uint amountB);\\r\\n}\\r\\n\\r\\ninterface IUniswapV2Pair {\\r\\n  event Approval(address indexed owner, address indexed spender, uint value);\\r\\n  event Transfer(address indexed from, address indexed to, uint value);\\r\\n\\r\\n  function name() external pure returns (string memory);\\r\\n\\r\\n  function symbol() external pure returns (string memory);\\r\\n\\r\\n  function decimals() external pure returns (uint8);\\r\\n\\r\\n  function totalSupply() external view returns (uint);\\r\\n\\r\\n  function balanceOf(address owner) external view returns (uint);\\r\\n\\r\\n  function allowance(address owner, address spender) external view returns (uint);\\r\\n\\r\\n  function approve(address spender, uint value) external returns (bool);\\r\\n\\r\\n  function transfer(address to, uint value) external returns (bool);\\r\\n\\r\\n  function transferFrom(\\r\\n    address from,\\r\\n    address to,\\r\\n    uint value\\r\\n  ) external returns (bool);\\r\\n\\r\\n  function DOMAIN_SEPARATOR() external view returns (bytes32);\\r\\n\\r\\n  function PERMIT_TYPEHASH() external pure returns (bytes32);\\r\\n\\r\\n  function nonces(address owner) external view returns (uint);\\r\\n\\r\\n  function permit(\\r\\n    address owner,\\r\\n    address spender,\\r\\n    uint value,\\r\\n    uint deadline,\\r\\n    uint8 v,\\r\\n    bytes32 r,\\r\\n    bytes32 s\\r\\n  ) external;\\r\\n\\r\\n  event Mint(address indexed sender, uint amount0, uint amount1);\\r\\n  event Burn(address indexed sender, uint amount0, uint amount1, address indexed to);\\r\\n  event Swap(\\r\\n    address indexed sender,\\r\\n    uint amount0In,\\r\\n    uint amount1In,\\r\\n    uint amount0Out,\\r\\n    uint amount1Out,\\r\\n    address indexed to\\r\\n  );\\r\\n  event Sync(uint112 reserve0, uint112 reserve1);\\r\\n\\r\\n  function MINIMUM_LIQUIDITY() external pure returns (uint);\\r\\n\\r\\n  function factory() external view returns (address);\\r\\n\\r\\n  function token0() external view returns (address);\\r\\n\\r\\n  function token1() external view returns (address);\\r\\n\\r\\n  function getReserves()\\r\\n    external\\r\\n    view\\r\\n    returns (\\r\\n      uint112 reserve0,\\r\\n      uint112 reserve1,\\r\\n      uint32 blockTimestampLast\\r\\n    );\\r\\n\\r\\n  function price0CumulativeLast() external view returns (uint);\\r\\n\\r\\n  function price1CumulativeLast() external view returns (uint);\\r\\n\\r\\n  function kLast() external view returns (uint);\\r\\n\\r\\n  function mint(address to) external returns (uint liquidity);\\r\\n\\r\\n  function burn(address to) external returns (uint amount0, uint amount1);\\r\\n\\r\\n  function swap(\\r\\n    uint amount0Out,\\r\\n    uint amount1Out,\\r\\n    address to,\\r\\n    bytes calldata data\\r\\n  ) external;\\r\\n\\r\\n  function skim(address to) external;\\r\\n\\r\\n  function sync() external;\\r\\n\\r\\n  function initialize(address, address) external;\\r\\n}\\r\\n\\r\\ninterface IUniswapV2Factory {\\r\\n  event PairCreated(address indexed token0, address indexed token1, address pair, uint);\\r\\n\\r\\n  function feeTo() external view returns (address);\\r\\n\\r\\n  function feeToSetter() external view returns (address);\\r\\n\\r\\n  function getPair(address tokenA, address tokenB) external view returns (address pair);\\r\\n\\r\\n  function allPairs(uint) external view returns (address pair);\\r\\n\\r\\n  function allPairsLength() external view returns (uint);\\r\\n\\r\\n  function createPair(address tokenA, address tokenB) external returns (address pair);\\r\\n\\r\\n  function setFeeTo(address) external;\\r\\n\\r\\n  function setFeeToSetter(address) external;\\r\\n}\",\"keccak256\":\"0xcabb494766ac5354961951ac31ef5da355389d3c1ff5411e0c1cc110906803c5\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506109d1806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80633c50eec11461003b578063d5bcb9b514610064575b600080fd5b61004e610049366004610705565b610079565b60405161005b91906108fc565b60405180910390f35b610077610072366004610740565b610340565b005b600060606001600160a01b0385167376a3ef01506eb19d6b34c4bdcf3cdcde14f6b11e14806100c457506001600160a01b0384167376a3ef01506eb19d6b34c4bdcf3cdcde14f6b11e145b15610172576040805160028082526060820183529091602083019080368337019050509050848160008151811061010b57634e487b7160e01b600052603260045260246000fd5b60200260200101906001600160a01b031690816001600160a01b031681525050838160018151811061014d57634e487b7160e01b600052603260045260246000fd5b60200260200101906001600160a01b031690816001600160a01b03168152505061026e565b60408051600380825260808201909252906020820160608036833701905050905084816000815181106101b557634e487b7160e01b600052603260045260246000fd5b60200260200101906001600160a01b031690816001600160a01b0316815250507376a3ef01506eb19d6b34c4bdcf3cdcde14f6b11e8160018151811061020b57634e487b7160e01b600052603260045260246000fd5b60200260200101906001600160a01b031690816001600160a01b031681525050838160028151811061024d57634e487b7160e01b600052603260045260246000fd5b60200260200101906001600160a01b031690816001600160a01b0316815250505b60405163d06ca61f60e01b8152600090737cc8ce65d5f3d7d417188fed0dbfe403fd9564879063d06ca61f906102aa9087908690600401610905565b60006040518083038186803b1580156102c257600080fd5b505afa1580156102d6573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526102fe9190810190610796565b9050806001835161030f9190610962565b8151811061032d57634e487b7160e01b600052603260045260246000fd5b6020026020010151925050509392505050565b6040516323b872dd60e01b81526001600160a01b038616906323b872dd90610370903390309088906004016108bf565b602060405180830381600087803b15801561038a57600080fd5b505af115801561039e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103c29190610855565b5060405163095ea7b360e01b81526001600160a01b0386169063095ea7b39061040590737cc8ce65d5f3d7d417188fed0dbfe403fd9564879087906004016108e3565b602060405180830381600087803b15801561041f57600080fd5b505af1158015610433573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104579190610855565b5060606001600160a01b0386167376a3ef01506eb19d6b34c4bdcf3cdcde14f6b11e14806104a157506001600160a01b0385167376a3ef01506eb19d6b34c4bdcf3cdcde14f6b11e145b1561054f57604080516002808252606082018352909160208301908036833701905050905085816000815181106104e857634e487b7160e01b600052603260045260246000fd5b60200260200101906001600160a01b031690816001600160a01b031681525050848160018151811061052a57634e487b7160e01b600052603260045260246000fd5b60200260200101906001600160a01b031690816001600160a01b03168152505061064b565b604080516003808252608082019092529060208201606080368337019050509050858160008151811061059257634e487b7160e01b600052603260045260246000fd5b60200260200101906001600160a01b031690816001600160a01b0316815250507376a3ef01506eb19d6b34c4bdcf3cdcde14f6b11e816001815181106105e857634e487b7160e01b600052603260045260246000fd5b60200260200101906001600160a01b031690816001600160a01b031681525050848160028151811061062a57634e487b7160e01b600052603260045260246000fd5b60200260200101906001600160a01b031690816001600160a01b0316815250505b6040516338ed173960e01b8152737cc8ce65d5f3d7d417188fed0dbfe403fd956487906338ed17399061068a9087908790869088904290600401610926565b600060405180830381600087803b1580156106a457600080fd5b505af11580156106b8573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526106e09190810190610796565b50505050505050565b80356001600160a01b038116811461070057600080fd5b919050565b600080600060608486031215610719578283fd5b610722846106e9565b9250610730602085016106e9565b9150604084013590509250925092565b600080600080600060a08688031215610757578081fd5b610760866106e9565b945061076e602087016106e9565b9350604086013592506060860135915061078a608087016106e9565b90509295509295909350565b600060208083850312156107a8578182fd5b825167ffffffffffffffff808211156107bf578384fd5b818501915085601f8301126107d2578384fd5b8151818111156107e4576107e4610985565b838102604051601f19603f8301168101818110858211171561080857610808610985565b604052828152858101935084860182860187018a1015610826578788fd5b8795505b8386101561084857805185526001959095019493860193860161082a565b5098975050505050505050565b600060208284031215610866578081fd5b81518015158114610875578182fd5b9392505050565b6000815180845260208085019450808401835b838110156108b45781516001600160a01b03168752958201959082019060010161088f565b509495945050505050565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03929092168252602082015260400190565b90815260200190565b60008382526040602083015261091e604083018461087c565b949350505050565b600086825285602083015260a0604083015261094560a083018661087c565b6001600160a01b0394909416606083015250608001529392505050565b60008282101561098057634e487b7160e01b81526011600452602481fd5b500390565b634e487b7160e01b600052604160045260246000fdfea2646970667358221220e4a28ae5cd54577e41fcde7f8a23ca31b2e16a92fb9953d49150696876cc9e2b64736f6c63430008010033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100365760003560e01c80633c50eec11461003b578063d5bcb9b514610064575b600080fd5b61004e610049366004610705565b610079565b60405161005b91906108fc565b60405180910390f35b610077610072366004610740565b610340565b005b600060606001600160a01b0385167376a3ef01506eb19d6b34c4bdcf3cdcde14f6b11e14806100c457506001600160a01b0384167376a3ef01506eb19d6b34c4bdcf3cdcde14f6b11e145b15610172576040805160028082526060820183529091602083019080368337019050509050848160008151811061010b57634e487b7160e01b600052603260045260246000fd5b60200260200101906001600160a01b031690816001600160a01b031681525050838160018151811061014d57634e487b7160e01b600052603260045260246000fd5b60200260200101906001600160a01b031690816001600160a01b03168152505061026e565b60408051600380825260808201909252906020820160608036833701905050905084816000815181106101b557634e487b7160e01b600052603260045260246000fd5b60200260200101906001600160a01b031690816001600160a01b0316815250507376a3ef01506eb19d6b34c4bdcf3cdcde14f6b11e8160018151811061020b57634e487b7160e01b600052603260045260246000fd5b60200260200101906001600160a01b031690816001600160a01b031681525050838160028151811061024d57634e487b7160e01b600052603260045260246000fd5b60200260200101906001600160a01b031690816001600160a01b0316815250505b60405163d06ca61f60e01b8152600090737cc8ce65d5f3d7d417188fed0dbfe403fd9564879063d06ca61f906102aa9087908690600401610905565b60006040518083038186803b1580156102c257600080fd5b505afa1580156102d6573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526102fe9190810190610796565b9050806001835161030f9190610962565b8151811061032d57634e487b7160e01b600052603260045260246000fd5b6020026020010151925050509392505050565b6040516323b872dd60e01b81526001600160a01b038616906323b872dd90610370903390309088906004016108bf565b602060405180830381600087803b15801561038a57600080fd5b505af115801561039e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103c29190610855565b5060405163095ea7b360e01b81526001600160a01b0386169063095ea7b39061040590737cc8ce65d5f3d7d417188fed0dbfe403fd9564879087906004016108e3565b602060405180830381600087803b15801561041f57600080fd5b505af1158015610433573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104579190610855565b5060606001600160a01b0386167376a3ef01506eb19d6b34c4bdcf3cdcde14f6b11e14806104a157506001600160a01b0385167376a3ef01506eb19d6b34c4bdcf3cdcde14f6b11e145b1561054f57604080516002808252606082018352909160208301908036833701905050905085816000815181106104e857634e487b7160e01b600052603260045260246000fd5b60200260200101906001600160a01b031690816001600160a01b031681525050848160018151811061052a57634e487b7160e01b600052603260045260246000fd5b60200260200101906001600160a01b031690816001600160a01b03168152505061064b565b604080516003808252608082019092529060208201606080368337019050509050858160008151811061059257634e487b7160e01b600052603260045260246000fd5b60200260200101906001600160a01b031690816001600160a01b0316815250507376a3ef01506eb19d6b34c4bdcf3cdcde14f6b11e816001815181106105e857634e487b7160e01b600052603260045260246000fd5b60200260200101906001600160a01b031690816001600160a01b031681525050848160028151811061062a57634e487b7160e01b600052603260045260246000fd5b60200260200101906001600160a01b031690816001600160a01b0316815250505b6040516338ed173960e01b8152737cc8ce65d5f3d7d417188fed0dbfe403fd956487906338ed17399061068a9087908790869088904290600401610926565b600060405180830381600087803b1580156106a457600080fd5b505af11580156106b8573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526106e09190810190610796565b50505050505050565b80356001600160a01b038116811461070057600080fd5b919050565b600080600060608486031215610719578283fd5b610722846106e9565b9250610730602085016106e9565b9150604084013590509250925092565b600080600080600060a08688031215610757578081fd5b610760866106e9565b945061076e602087016106e9565b9350604086013592506060860135915061078a608087016106e9565b90509295509295909350565b600060208083850312156107a8578182fd5b825167ffffffffffffffff808211156107bf578384fd5b818501915085601f8301126107d2578384fd5b8151818111156107e4576107e4610985565b838102604051601f19603f8301168101818110858211171561080857610808610985565b604052828152858101935084860182860187018a1015610826578788fd5b8795505b8386101561084857805185526001959095019493860193860161082a565b5098975050505050505050565b600060208284031215610866578081fd5b81518015158114610875578182fd5b9392505050565b6000815180845260208085019450808401835b838110156108b45781516001600160a01b03168752958201959082019060010161088f565b509495945050505050565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03929092168252602082015260400190565b90815260200190565b60008382526040602083015261091e604083018461087c565b949350505050565b600086825285602083015260a0604083015261094560a083018661087c565b6001600160a01b0394909416606083015250608001529392505050565b60008282101561098057634e487b7160e01b81526011600452602481fd5b500390565b634e487b7160e01b600052604160045260246000fdfea2646970667358221220e4a28ae5cd54577e41fcde7f8a23ca31b2e16a92fb9953d49150696876cc9e2b64736f6c63430008010033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": null
  }
}