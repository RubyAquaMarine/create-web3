{
  "address": "0x3CB48bAe312a70eEd5C46082a3C567aa029a1d13",
  "abi": [],
  "transactionHash": "0x3c0aea1cc9ff5c821f408225b6c37e41fac50051bddcdd75fab389a3d4dab5a8",
  "receipt": {
    "to": "0x0000000000000000000000000000000000000000",
    "from": "0x41DD8Ea1fc8d83f8c4a20a5a6E57238c7F476C09",
    "contractAddress": "0x3CB48bAe312a70eEd5C46082a3C567aa029a1d13",
    "transactionIndex": 0,
    "gasUsed": "397128",
    "logsBloom": "0x
    "blockHash": "0x96353e6d00e7307e5c5dcba74e6f009714dc220b1c4f9887bd639883823c0d5f",
    "transactionHash": "0x3c0aea1cc9ff5c821f408225b6c37e41fac50051bddcdd75fab389a3d4dab5a8",
    "logs": [],
    "blockNumber": 2236999,
    "cumulativeGasUsed": "397128",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 2,
  "solcInputHash": "9e87d06f898d050c7b38b99cb6cd4986",
  "metadata": "{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/libs/LibConfig.sol\":\"LibConfig\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"},\"contracts/Types.sol\":{\"content\":\"//SPDX-License-Identifier: Unlicense\\r\\npragma solidity ^0.8.0;\\r\\npragma experimental ABIEncoderV2;\\r\\n\\r\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\r\\n\\r\\n/*\\r\\ncannot hold state variables, fallback or payable functions also cannot be created inside\\r\\nthe library\\r\\n\\r\\nonly pure and view functions can be called from outside of the library\\r\\n\\r\\n*/\\r\\n\\r\\nlibrary Types {\\r\\n\\r\\n    struct TokenAmount {\\r\\n        IERC20 token;\\r\\n        uint112 amount;\\r\\n    }\\r\\n\\r\\n    //status of order. Only tracked on action from user/miners\\r\\n    enum OrderStatus {\\r\\n        UNDEFINED,\\r\\n        PENDING,\\r\\n        FILLED,\\r\\n        CANCELLED,\\r\\n        PENALIZED\\r\\n    }\\r\\n\\r\\n    struct Order {\\r\\n\\r\\n        //trader that owns the order\\r\\n        address trader;\\r\\n\\r\\n        //the token we are taking as fee\\r\\n        IERC20 feeToken;\\r\\n\\r\\n        //eth price of fee token in 18-decimal units\\r\\n        uint feeTokenETHPrice;\\r\\n\\r\\n        //current price of ETH in USD units\\r\\n        uint ethUSDPrice;\\r\\n\\r\\n        //an estimate of gas to use to fill the order\\r\\n        uint gasEstimate;\\r\\n\\r\\n        //token being offered\\r\\n        TokenAmount input;\\r\\n\\r\\n        //token wanted\\r\\n        TokenAmount output;\\r\\n    }\\r\\n\\r\\n    //============== CONFIG STATE =============/\\r\\n    struct Config {\\r\\n        //dev team address (120b)\\r\\n        address devTeam;\\r\\n\\r\\n        //bps fee expressed as a whole number\\r\\n        uint128 minFee;\\r\\n\\r\\n        //penalty a user faces for removing assets or \\r\\n        //allowances before a trade\\r\\n        uint128 penaltyFee;\\r\\n\\r\\n        //number of blocks to lock stake and order cancellations\\r\\n        uint8 lockoutBlocks;\\r\\n    }\\r\\n\\r\\n    //============== ACCESS STATE =============/\\r\\n    //storage structure of access controls\\r\\n    struct AccessControl {\\r\\n        bool reentrantFlag;\\r\\n        mapping(bytes32 => mapping(address => bool)) roles;\\r\\n    }\\r\\n\\r\\n    //============== INITIALIZATION STATE =============/\\r\\n    struct InitControls {\\r\\n        bool initialized;\\r\\n        bool initializing;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0xde3f80eb6bf222c11de220f4cce5c85b92910abb1b5e48510316b117ce86df3f\",\"license\":\"Unlicense\"},\"contracts/libs/LibConfig.sol\":{\"content\":\"//SPDX-License-Identifier: Unlicense\\r\\npragma solidity ^0.8.0;\\r\\npragma experimental ABIEncoderV2;\\r\\nimport \\\"../Types.sol\\\";\\r\\n\\r\\nlibrary LibConfig {\\r\\n\\r\\n\\r\\n    function store(Types.Config storage cs, Types.Config memory config) public {\\r\\n        cs.devTeam = config.devTeam;\\r\\n        cs.minFee = config.minFee;\\r\\n        cs.penaltyFee = config.penaltyFee;\\r\\n        cs.lockoutBlocks = config.lockoutBlocks;\\r\\n        require(cs.devTeam != address(0), \\\"Invalid dev team address\\\");\\r\\n    }\\r\\n\\r\\n    function copy(Types.Config storage config) public view returns(Types.Config memory) {\\r\\n        Types.Config memory cs;\\r\\n        cs.devTeam = config.devTeam;\\r\\n        cs.minFee = config.minFee;\\r\\n        cs.penaltyFee = config.penaltyFee;\\r\\n        cs.lockoutBlocks = config.lockoutBlocks;\\r\\n        require(cs.devTeam != address(0), \\\"Invalid dev team address\\\");\\r\\n        return cs;\\r\\n    }\\r\\n    \\r\\n\\r\\n    //============== VIEWS ================/\\r\\n    \\r\\n    function getDevTeam(Types.Config storage _config) external view returns (address) {\\r\\n        return _config.devTeam;\\r\\n    }\\r\\n\\r\\n    function getLockoutBlocks(Types.Config storage _config) external view returns (uint8) {\\r\\n        return _config.lockoutBlocks;\\r\\n    }\\r\\n\\r\\n    function getMinFee(Types.Config storage _config) external view returns (uint128) {\\r\\n        return _config.minFee;\\r\\n    }\\r\\n\\r\\n    function getPenaltyFee(Types.Config storage _config) external view returns (uint128) {\\r\\n        return _config.penaltyFee;\\r\\n    }\\r\\n\\r\\n    //=============== MUTATIONS ============/\\r\\n\\r\\n    function setDevTeam(Types.Config storage _config, address team) external{\\r\\n        _config.devTeam = team;\\r\\n    }\\r\\n\\r\\n    function setLockoutBlocks(Types.Config storage _config, uint8 blocks) external{\\r\\n        _config.lockoutBlocks = blocks;\\r\\n    }\\r\\n\\r\\n    function setMinFee(Types.Config storage _config, uint128 fee) external{\\r\\n        _config.minFee = fee;\\r\\n    }\\r\\n\\r\\n    function setPenaltyFee(Types.Config storage _config, uint128 fee) external{\\r\\n        _config.penaltyFee = fee;\\r\\n    }\\r\\n    \\r\\n}\",\"keccak256\":\"0x9d201e88050bc301a8e67325804c7afe43d6ecd29da639a2b8259ddf6744d867\",\"license\":\"Unlicense\"}},\"version\":1}",
  "bytecode": "0x61063761003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100a85760003560e01c806379df73751161007057806379df7375146101585780638fe20a7b1461016b578063bd87145b1461018b578063c2ab03e1146101ab578063e40a1aea146101cb576100a8565b80631d24da6c146100ad57806321cab0c7146100cf5780633ed940e6146100ef57806358e62d58146101185780636d73f0db14610138575b600080fd5b8180156100b957600080fd5b506100cd6100c8366004610508565b6101eb565b005b8180156100db57600080fd5b506100cd6100ea366004610461565b61020d565b6101026100fd36600461041e565b6102ab565b60405161010f91906105df565b60405180910390f35b81801561012457600080fd5b506100cd61013336600461052a565b6102c6565b61014b61014636600461041e565b6102df565b60405161010f9190610597565b61010261016636600461041e565b61034f565b81801561017757600080fd5b506100cd610186366004610436565b61035f565b81801561019757600080fd5b506100cd6101a6366004610508565b61037c565b6101be6101b936600461041e565b6103a1565b60405161010f91906105f3565b6101de6101d936600461041e565b6103ab565b60405161010f919061054c565b600190910180546001600160801b03928316600160801b029216919091179055565b805182546001600160a01b0319166001600160a01b0391821617808455602083015160018501805460408601516001600160801b03199091166001600160801b03938416178316600160801b9390911692909202919091179055606083015160028501805460ff191660ff909216919091179055166102a75760405162461bcd60e51b815260040161029e90610560565b60405180910390fd5b5050565b6001810154600160801b90046001600160801b03165b919050565b600291909101805460ff191660ff909216919091179055565b6102e76103b8565b6102ef6103b8565b82546001600160a01b031680825260018401546001600160801b038082166020850152600160801b909104166040830152600284015460ff1660608301526103495760405162461bcd60e51b815260040161029e90610560565b92915050565b600101546001600160801b031690565b81546001600160a01b0319166001600160a01b0391909116179055565b60019190910180546001600160801b0319166001600160801b03909216919091179055565b6002015460ff1690565b546001600160a01b031690565b60408051608081018252600080825260208201819052918101829052606081019190915290565b80356001600160a01b03811681146102c157600080fd5b80356001600160801b03811681146102c157600080fd5b803560ff811681146102c157600080fd5b60006020828403121561042f578081fd5b5035919050565b60008060408385031215610448578081fd5b82359150610458602084016103df565b90509250929050565b60008082840360a0811215610474578283fd5b833592506080601f1982011215610489578182fd5b506040516080810181811067ffffffffffffffff821117156104b957634e487b7160e01b83526041600452602483fd5b6040526104c8602085016103df565b81526104d6604085016103f6565b60208201526104e7606085016103f6565b60408201526104f86080850161040d565b6060820152809150509250929050565b6000806040838503121561051a578182fd5b82359150610458602084016103f6565b6000806040838503121561053c578182fd5b823591506104586020840161040d565b6001600160a01b0391909116815260200190565b60208082526018908201527f496e76616c696420646576207465616d20616464726573730000000000000000604082015260600190565b81516001600160a01b031681526020808301516001600160801b03908116918301919091526040808401519091169082015260609182015160ff169181019190915260800190565b6001600160801b0391909116815260200190565b60ff9190911681526020019056fea26469706673582212209aaeb993024e241547bc7f0b7d07d3acec11fc62d6b1e7f19b20c3097db1483464736f6c63430008010033",
  "deployedBytecode": "0x73000000000000000000000000000000000000000030146080604052600436106100a85760003560e01c806379df73751161007057806379df7375146101585780638fe20a7b1461016b578063bd87145b1461018b578063c2ab03e1146101ab578063e40a1aea146101cb576100a8565b80631d24da6c146100ad57806321cab0c7146100cf5780633ed940e6146100ef57806358e62d58146101185780636d73f0db14610138575b600080fd5b8180156100b957600080fd5b506100cd6100c8366004610508565b6101eb565b005b8180156100db57600080fd5b506100cd6100ea366004610461565b61020d565b6101026100fd36600461041e565b6102ab565b60405161010f91906105df565b60405180910390f35b81801561012457600080fd5b506100cd61013336600461052a565b6102c6565b61014b61014636600461041e565b6102df565b60405161010f9190610597565b61010261016636600461041e565b61034f565b81801561017757600080fd5b506100cd610186366004610436565b61035f565b81801561019757600080fd5b506100cd6101a6366004610508565b61037c565b6101be6101b936600461041e565b6103a1565b60405161010f91906105f3565b6101de6101d936600461041e565b6103ab565b60405161010f919061054c565b600190910180546001600160801b03928316600160801b029216919091179055565b805182546001600160a01b0319166001600160a01b0391821617808455602083015160018501805460408601516001600160801b03199091166001600160801b03938416178316600160801b9390911692909202919091179055606083015160028501805460ff191660ff909216919091179055166102a75760405162461bcd60e51b815260040161029e90610560565b60405180910390fd5b5050565b6001810154600160801b90046001600160801b03165b919050565b600291909101805460ff191660ff909216919091179055565b6102e76103b8565b6102ef6103b8565b82546001600160a01b031680825260018401546001600160801b038082166020850152600160801b909104166040830152600284015460ff1660608301526103495760405162461bcd60e51b815260040161029e90610560565b92915050565b600101546001600160801b031690565b81546001600160a01b0319166001600160a01b0391909116179055565b60019190910180546001600160801b0319166001600160801b03909216919091179055565b6002015460ff1690565b546001600160a01b031690565b60408051608081018252600080825260208201819052918101829052606081019190915290565b80356001600160a01b03811681146102c157600080fd5b80356001600160801b03811681146102c157600080fd5b803560ff811681146102c157600080fd5b60006020828403121561042f578081fd5b5035919050565b60008060408385031215610448578081fd5b82359150610458602084016103df565b90509250929050565b60008082840360a0811215610474578283fd5b833592506080601f1982011215610489578182fd5b506040516080810181811067ffffffffffffffff821117156104b957634e487b7160e01b83526041600452602483fd5b6040526104c8602085016103df565b81526104d6604085016103f6565b60208201526104e7606085016103f6565b60408201526104f86080850161040d565b6060820152809150509250929050565b6000806040838503121561051a578182fd5b82359150610458602084016103f6565b6000806040838503121561053c578182fd5b823591506104586020840161040d565b6001600160a01b0391909116815260200190565b60208082526018908201527f496e76616c696420646576207465616d20616464726573730000000000000000604082015260600190565b81516001600160a01b031681526020808301516001600160801b03908116918301919091526040808401519091169082015260609182015160ff169181019190915260800190565b6001600160801b0391909116815260200190565b60ff9190911681526020019056fea26469706673582212209aaeb993024e241547bc7f0b7d07d3acec11fc62d6b1e7f19b20c3097db1483464736f6c63430008010033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": null
  }
}